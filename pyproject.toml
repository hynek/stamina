[build-system]
requires = ["hatchling", "hatch-vcs", "hatch-fancy-pypi-readme>=22.8.0"]
build-backend = "hatchling.build"


[project]
dynamic = ["version", "readme"]
name = "stamina"
description = "Production-grade retries made easy."
requires-python = ">=3.8"
license = "MIT"
keywords = ["retry", "retries", "reliability"]
authors = [{ name = "Hynek Schlawack", email = "hs@ox.cx" }]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Typing :: Typed",
  "Framework :: AsyncIO",
  "Framework :: Trio",
]
dependencies = ["tenacity", "typing-extensions; python_version<'3.10'"]

[project.optional-dependencies]
tests = ["pytest", "anyio"]
typing = ["mypy>=1.4"]
docs = [
  "sphinx>=7.2.2",
  "furo",
  "myst-parser",
  "sphinx-notfound-page",
  "sphinx-copybutton",
  "structlog",
  "prometheus-client",
]
dev = [
  "stamina[tests,typing]",
  "nox",
  "tomli; python_version<'3.11'",
  "structlog",
  "prometheus-client",
  "trio",
]

[project.urls]
Documentation = "https://stamina.hynek.me/"
Source = "https://github.com/hynek/stamina"
Changelog = "https://github.com/hynek/stamina/blob/main/CHANGELOG.md"
Funding = "https://github.com/sponsors/hynek"
Mastodon = "https://mastodon.social/@hynek"
Twitter = "https://twitter.com/hynek"


[tool.hatch.version]
source = "vcs"
raw-options = { local_scheme = "no-local-version" }


[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/markdown"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
text = "# *stamina*: Production-grade Retries Made Easy"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "README.md"
start-after = "---"
end-before = "## Project Links"


[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
text = """

## Release Information

"""

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "CHANGELOG.md"
start-after = "<!-- changelog follows -->"
pattern = "\n(###.+?\n)## "

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
text = """
---

[Full Changelog â†’](https://github.com/hynek/stamina/blob/main/CHANGELOG.md)


"""

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "README.md"
start-at = "## Credits"


[tool.pytest.ini_options]
addopts = ["-ra", "--strict-markers", "--strict-config"]
testpaths = "tests"
xfail_strict = true
filterwarnings = ["once::Warning"]


[tool.coverage.run]
branch = true
parallel = true
source = ["stamina"]

[tool.coverage.paths]
source = ["src", ".nox/tests*/**/site-packages"]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_also = [
  'raise SystemError\("unreachable"\)',
  # Typing-related
  "if TYPE_CHECKING:",
  ': \.\.\.$',
]


[tool.interrogate]
omit-covered-files = true
verbose = 2
fail-under = 100
whitelist-regex = ["test_.*"]


[tool.mypy]
strict = true

show_error_codes = true
enable_error_code = ["ignore-without-code"]

ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "tests.typing.*"
ignore_errors = false

[[tool.mypy.overrides]]
module = "tenacity.*"
follow_imports = "skip"

[[tool.mypy.overrides]]
module = "noxfile.*"
disallow_untyped_decorators = false


[tool.black]
line-length = 79


[tool.ruff]
src = ["src", "tests", "noxfile.py", "docs/conf.py"]
select = ["ALL"]
ignore = [
  "A001",    # shadowing is fine
  "ANN",     # Mypy is better at this
  "ARG001",  # unused arguments are normal when implementing interfaces
  "COM",     # Black takes care of our commas
  "D",       # We prefer our own docstring style.
  "E501",    # leave line-length enforcement to Black
  "FBT",     # we have one function that takes one bool; c'mon!
  "FIX",     # Yes, we want XXX as a marker.
  "INP001",  # sometimes we want Python files outside of packages
  "PLR0913", # yes, many arguments, but most have defaults
  "PLR2004", # numbers are sometimes fine
  "RUF001",  # leave my smart characters alone
  "SLF001",  # private members are accessed by friendly functions
  "TCH",     # TYPE_CHECKING blocks break autodocs
  "TD",      # we don't follow other people's todo style
  "TID252",  # relative imports are always awesome
]

[tool.ruff.per-file-ignores]
"tests/*" = [
  "ARG005", # we need stub lambdas
  "S101",   # assert
  "SIM300", # Yoda rocks in asserts
  "PT005",  # we always add underscores and explicit name
  "PT011",  # broad is fine
  "TRY002", # stock exceptions are fine in tests
  "EM101",  # no need for exception msg hygiene in tests
]


[tool.ruff.isort]
lines-between-types = 1
lines-after-imports = 2
